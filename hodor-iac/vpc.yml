AWSTemplateFormatVersion: 2010-09-09

Parameters:
  App:
    Type: String
    Default: "hodor"
  Az1:
    Type: String
    Default: "eu-central-1a"
  Az2:
    Type: String
    Default: "eu-central-1b"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: stack
          Value: hodor

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref Az1
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref Az2
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref Az1
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref Az2
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ## PUBLIC ROUTING
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet4
      RouteTableId: !Ref PublicRouteTable

Outputs:
  VpcId:
    Description: VpcId
    Value:
      Ref: VPC
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-VpcId'

  PublicSubnet1:
    Description: PublicSubnet1
    Value:
      Ref: PublicSubnet1
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-PublicSubnet1'

  PublicSubnet2:
    Description: PublicSubnet2
    Value:
      Ref: PublicSubnet2
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-PublicSubnet2'

  PublicSubnet3:
    Description: PublicSubnet3
    Value:
      Ref: PublicSubnet3
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-PublicSubnet3'

  PublicSubnet4:
    Description: PublicSubnet4
    Value:
      Ref: PublicSubnet4
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-PublicSubnet4'